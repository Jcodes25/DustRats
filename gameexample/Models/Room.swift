//
//  classes.swift
//  gameexample
//
//  Created by Tyson Laroyce Walker II on 5/9/23.
//

import Foundation
import SwiftUI

struct Room: Identifiable {
    let id = UUID()
    var personInRoom: Person?
    var key:Item?
    var dialog:String?
    var choices:[Choice]?
    var roompic:String
    var itemsInRoom: [Item]?
    var storyThingFromRoom: storyThing?
    let doors: [DoorOptions]

    mutating func move() {
        self = Room.rooms.randomElement()!
    }
    
    mutating func stairs() {
        self = Room.stairs.randomElement()!
    }
        
    static let rooms: [Room] = [
        Room(personInRoom: Person(hp: nil, portrait: "highguard", dialog: ["You aren't supposed to be here, where are you here ","do me a favor", "go back to your cell, rat",""], inventory: [], dialog2: [], choice: nil, nameOfPerson: "Strong Guard", strength: 10, charisma: 100, intelligence: 1000, luck:100), roompic: "newerdorwhodis", itemsInRoom: [Item.items.randomElement()!], storyThingFromRoom: storyThing(text: "You find yourself in a waiting room, likely used for their unknowing test subjects. People coming in sold a dream of healing and help only to be stolen away or ending up worse than they were when they came in. You notice something shiny stuck between two of the couch cushions",
                                                                                                                                                                                                                                                                                                                                                                                                                                   choice: [Choice(description: "Read the magazine",item: Item(itemImg: "magazinepic", itemName: "Magazine", itemDescription: "Some random magazine you found in a couch"), nextStoryThing: storyThing(text: "You pick up a magazine called The New Glaucous Times. Skimming through you stop on a article called ‚ÄúStar Dust Refinement Surgery? A Phasing Fade or the Hottest New Choice‚Äù It tells about the surgery done to ‚Äúrefine‚Äù your stardust or in other words make some one a more ‚Äúacceptable‚Äù star dust color. The surgery is purely cosmetic and doesn‚Äôt even help solve the mental and physical instablities that some people have due to the constant inhilation of the meteor‚Äôs gases", choice: [Choice(description: "Continue Reading", nextStoryThing: storyThing(text: "You pick up a magazine called The New Glaucous Times. Skimming through you stop on a article called ‚ÄúStar Dust Refinement Surgery? A Phasing Fade or the Hottest New Choice‚Äù It tells about the surgery done to ‚Äúrefine‚Äù your stardust or in other words make some one a more ‚Äúacceptable‚Äù star dust color. The surgery is purely cosmetic and doesn‚Äôt even help solve the mental and physical instablities that some people have due to the constant inhilation of the meteor‚Äôs gases", choice: [Choice(description: "Continue Reading", nextStoryThing: storyThing(text: "You pick up a magazine called The New Glaucous Times. Skimming through you stop on a article called ‚ÄúStar Dust Refinement Surgery? A Phasing Fade or the Hottest New Choice‚Äù It tells about the surgery done to ‚Äúrefine‚Äù your stardust or in other words make some one a more ‚Äúacceptable‚Äù star dust color. The surgery is purely cosmetic and doesn‚Äôt even help solve the mental and physical instablities that some people have due to the constant inhilation of the meteor‚Äôs gases", choice: [Choice(description: "Put down magazine")], storyType: .decision)), Choice(description: "You put the magazine back down on the table")], storyType: .decision)), Choice(description: "Put down magazine")], storyType: .decision)),
                                                                                                                                                                                                                                                                                                                                                                                                                                            Choice(description: "Investigate shiny object", nextStoryThing: storyThing(text: "You find a stick of gum and from the shiny wrapper you know this to be Ultrasonic Smile, a very popular gum brand that touts being able to make teeth shinier after one chew", choice: [Choice(description: "Pop the piece of gum in your mouth", nextStoryThing: storyThing(text: "You feel fresher, mintier and a bit more confident with each chew (+1 CHA)", choice: [Choice(description: "üòé", statIncrease: .cha)], storyType: .decision)), Choice(description: "Decide you don't trust this couch gum", nextStoryThing: storyThing(text: "You put the gum down", choice: [Choice(description: "Ok")], storyType: .decision))], storyType: .decision))], storyType: .item), doors: [.left, .center, .right]),
        Room(roompic: "DR_2DoorsResizeFinal", itemsInRoom: [Item.items.randomElement()!], doors: [.left, .center]),
        Room(roompic: "DR_2DoorsResizeFinal", storyThingFromRoom: storyThing(text: "An empty conference room. A long table with 6 chairs on each side perfectly equidistant from each other. A low hum from a holo projecter displaying a still screen of the Radient Nova logo.  It all seems too perfect.", choice: [Choice(description: "Turn off the projecter", nextStoryThing: storyThing(text: "You gently hit the power button on the projector but instead of turning off the screen switches to an angry robotic face. You hear ‚ÄúHey, you! Don‚Äôt touch me!", choice: [Choice(description: "Hit the power button again", nextStoryThing: storyThing(text: "You touch the power button again hoping that the shouts will cease. Unfortunately the scream gets louder and more aggressive saying ‚ÄúTOUCH ME AGAIN AND YOU‚ÄôLL REGRET IT!‚Äù and the face on the screen turns to a even deeper and more alarming shade of red", choice: [Choice(description: "Touch the power again", nextStoryThing: storyThing(text: "You hit the power button for a third time and feel in your chest that you have made a grave mistake. The whole room starts to rumble and shake. Alarms start to blare and shutters come down trapping you in the room. The face on the screen turns into a deep menacing smile, ‚ÄúYou‚Äôre mine now.‚Äù ", choice: [Choice(description: "Ok"), Choice(description: "oh :c", nextStoryThing: storyThing(text: "", choice: [], storyType: .youGotCaught))], storyType: .decision)), Choice(description: "Apologize and don't touch the button", nextStoryThing: storyThing(text: "You offer your deepest apologizes to the face projected on the screen and back away. You were raised to be a colonel of consent.(+1 CHA)", choice: [Choice(description: "Ok")], storyType: .decision))], storyType: .decision)), Choice(description: "Apologize and don't touch the button"), ], storyType: .decision)),Choice(description: "Investigate the room", nextStoryThing: storyThing(text: "You move the chairs, looking under the table and in every nook and cranny. It seems as if your time spent searching was pointless until you find small indentation in the arm rest of the last chair. The object inside is pushed deep into the indent.", choice: [Choice(description: "Gently attemt to remove the object", nextStoryThing: storyThing(text: "You decide that its probably best to take the silent extraction route and slowly but surely out comes a PushNPep stimulant pen. A quick needle shot used to give the overworked employees more energy during their work days. Very addictive and something you‚Äôre smart enough to not indugle in(+1 INT)", choice: [Choice(description: "Ok")], storyType: .decision), statIncrease: .int), Choice(description: "Forcibly tear open arm rest", nextStoryThing: storyThing(text: "You invoke a deep strength and anger. You tear the arm rest in two and out pops a PushNPep stimulant pen used to give the overworked employees more energy during their work days. You crush the addictive stimulant under your heel(+1 STR)", choice: [Choice(description: "Ok")], storyType: .decision), statIncrease: .str)], storyType: .decision)) ], storyType: .decision), doors: [.left, .center] ),
        Room(roompic: "newerdorwhodis", storyThingFromRoom: storyThing(text: "The door slide open but before you can truely get a good look at its contents you hear the sound someone coming down the hallway. You quickly turn to the first things you see for a hiding place. A giant tube, a desk and a ", choice: [Choice(description: "Hide in tube", nextStoryThing: storyThing(text: "You quickly hop into the metallic tube and stand as ridgid and statue-like as you can hoping no one hear the door close behind you. There is no way to see what is happening outside so ow the question is how long do you wait before you get out?", choice: [Choice(description: "Wait 5 minutes"), Choice(description: "Wait 15 minutes")], storyType: .decision)), Choice(description: "Crouch under desk", nextStoryThing: storyThing(text: "You move the chairs, looking under the table and in every nook and cranny. It seems as if your time spent searching was pointless until you find small indentation in the arm rest of the last chair. The object inside is pushed deep into the indent.", choice: [Choice(description: "Gently attempt to remove the object", statIncrease: .int), Choice(description: "Forcibly tear open arm rest", statIncrease: .str)], storyType: .decision))], storyType: .decision), doors: [.left, .center, .right]),
        Room(roompic: "newerdorwhodis", storyThingFromRoom: storyThing(text: "You find yourself in one of the testing labs, treadmills, heart monitors, clipboards and all variety of measurement tools in every corner of the space.", choice: [Choice(description: "Read the clipboards for any valuable information", nextStoryThing: storyThing(text: "The clipboard has notes and statistics on a ‚ÄúVolunteer #486M‚Äù", choice: [Choice(description: "Read next section", nextStoryThing: storyThing(text: "One the next page you find a page notating the different scheduled maintenence for the lab and different areas of the building. It notes different items in the lab that are inoperable or due for updates. The Cryo Compensator is on the list as top priority.", choice: [Choice(description: "Put down clipboard")], storyType: .decision)), Choice(description: "Set the clipboard back down")], storyType: .decision)),
                                                                                                                                                                                                                                                 Choice(description: "take a roll of gauze", nextStoryThing: storyThing(text: "You find the foll of gauze in your Futron Pouch. Hopefully this wil lcome in handy later.", choice: [Choice(description: "collect", item: Item(itemImg: "gauzepic", itemName: "Gauze", itemDescription:"This will patch up any cuts and stuff you may get along your journey"))], storyType: .decision)),
                                                                                                                                                                                                                                                 
                                                                                                                                                                                                                                                 Choice(description: "Run on treadmill", nextStoryThing: storyThing(text: "You start to run on the treadmill, an odd choice in the middle of a rescue mission but you‚Äôve always been an odd duck. ", choice: [Choice(description: "Run for 20 minutes", nextStoryThing: storyThing(text: "You decide to do a quick work out and that coincidentally work outs for you, you feel stronger and swifter (+1 STR)", choice: [Choice(description: "YES üí™"), Choice(description: "ez gainz zzz ü•±üí§")], storyType: .decision), statIncrease: .str), Choice(description: "Run for 60 minutes", nextStoryThing: storyThing(text: "You decide to push your body a little harder than usual and it doesn‚Äôt go well. You‚Äôre tired and in a bit of pain(-1 STR)", choice: [Choice(description: "Ok")], storyType: .decision), statIncrease: .strd)], storyType: .decision))], storyType: .decision), doors: [.left, .center, .right])
//        Room(roompic: "poolrooms", itemsInRoom: [Item.items.randomElement()!]),
//        Room(roompic: "room1", itemsInRoom: [Item.items.randomElement()!]),
//        Room(roompic: "room2", itemsInRoom: [Item.items.randomElement()!]),
//        Room(roompic: "hallway", itemsInRoom: [Item.items.randomElement()!]),
//        Room(roompic: "backgroundthingy", itemsInRoom: [Item.items.randomElement()!]),
//        Room(roompic: "MainRoom", itemsInRoom: [Item.items.randomElement()!]),
//        Room(roompic: "newdorwhodis", itemsInRoom: [Item.items.randomElement()!]),
       
             ]
    
    static let stairs: [Room] = [Room(roompic:"stairs", doors: [.elevator])]
}

extension Room: Equatable {
    static func == (lhs: Room, rhs: Room) -> Bool {
        lhs.id == rhs.id
    }
}

